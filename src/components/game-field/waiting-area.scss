@use "../../theme";
@use "../../grid-mixins";

@import "../../utils/css-class";

$rowCount: var(--w-rows, 1);
$columnCount: var(--w-cols, grid-mixins.$squareCount);
$translateCount: var(--removed-count, 0);
$index: var(--index, 0);
$padding: calc(var(--s-size) / 4);
$translateValue: calc(var(--s-size) * $translateCount * -1);
$translateValueOutside: calc(var(--s-size) * calc($index - $columnCount + 1));

div.waiting-area {
  position: relative;
  margin: 0 auto;
  display: flex;
  flex-direction: column;
  font-size: grid-mixins.$font-size;
  line-height: 1;
  padding: $padding;
  background: theme.$tile-color-alpha;
  height: min-content;
  overflow: hidden;
  transition: opacity 1s;

  &:not(.has_waiting_person) {
    opacity: 0.5;
  }

  @media (orientation: portrait) {
    flex-direction: row;
  }

  .#{$CELL} {
    background: none;
    height: var(--s-size);
    width: var(--s-size);
    flex-shrink: 0;

    &.door {
      order: -1;
      grid-template-columns: 1fr auto;

      .count {
        font-family: monospace;
        font-variant-numeric: tabular-nums;
        font-size: 0.5em;
      }
    }

    &.outer {
      position: absolute;
      bottom: $padding;
      transform: translateY($translateValueOutside);

      @media (orientation: portrait) {
        transform: translateX($translateValueOutside);
        bottom: auto;
        right: $padding;
      }
    }

    &.outside {
      .#{$PERSON} {
        opacity: 0;
        transform: translateY($translateValue) scale(0);

        @media (orientation: portrait) {
          transform: translateX($translateValue) scale(0);
        }
      }
    }
  }

  .#{$PERSON} {
    height: var(--s-size);
    width: var(--s-size);
    transition:
      transform 1s,
      opacity 1s;
    transform: translateY($translateValue) scale(0.8);

    @media (orientation: portrait) {
      transform: translateX($translateValue) scale(0.8);
    }

    .#{$EMOJI} {
      &::before {
        content: "ðŸ˜´";
      }
    }

    &.#{$NEXT} {
      border-color: theme.$text-primary;
      opacity: 1;
      transform: translateY($translateValue) scale(1);

      @media (orientation: portrait) {
        transform: translateX($translateValue) scale(1);
      }

      .#{$EMOJI} {
        &::before {
          content: "ðŸ¤©";
        }
      }
    }

    &:not(.#{$NEXT}) {
      pointer-events: none;
      opacity: 0.75;
      filter: grayscale(0.5);
    }
  }
}
